{"version":3,"sources":["../../src/layout/SnackBarMsgs.js"],"names":["React","Component","PropTypes","css","fixBotton","position","width","bottom","zIndex","SnackBarMsgs","state","counter","msgs","snackMsgs","retorno","map","msg","key","uuid","type","texto","handleSnackClose","props","closeTimer","onClose","filter","nextProps","newMsgs","tipo","Date","getTime","setState","concat","propTypes","array","isRequired","number","func","defaultProps","Snack","timer","initCounter","setInterval","close","stopTimer","clearInterval","text","closeTime","handleClose","style","textClass","cardClass","join","padding","margin","marginTop","maxWidth","right","string"],"mappings":"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","file":"SnackBarMsgs.js","sourcesContent":["import React, {Component, PropTypes} from \"react\";\n\nconst css = {\n    fixBotton: {\n        position: 'absolute',\n        width: '100%',\n        bottom: '0px',\n        zIndex: 9999\n    }\n};\n\n// todo - implementar que no onmousehover o contador de tempo fica parado e a msg nÃ£o fecha\nclass SnackBarMsgs extends Component {\n    static propTypes = {\n        // children: PropTypes.object,\n        msgs: PropTypes.array.isRequired,\n        closeTimer: PropTypes.number,\n        onClose: PropTypes.func\n    };\n\n    static defaultProps = {\n        // children: null,\n        msgs: [],\n        closeTimer: 5,\n        onClose: null\n    };\n\n    state = {\n        counter: 0,\n        msgs: []\n    };\n\n    componentWillReceiveProps(nextProps) {\n        const newMsgs = nextProps.msgs.map((msg, key) => {\n            msg.type = msg.tipo || 'info';\n            msg.uuid = msg.uuid || new Date().getTime() + key;\n            return msg;\n        });\n        this.setState({msgs: this.state.msgs.concat(newMsgs)});\n    }\n\n    snackMsgs = () => {\n        const retorno = this.state.msgs.map((msg, key) => {\n            return <Snack key={msg.uuid} uuid={msg.uuid} type={msg.type} text={msg.texto}\n                          handleClose={this.handleSnackClose}\n                          closeTime={(this.props.closeTimer)}/>;\n        });\n\n        return retorno;\n    };\n\n    handleSnackClose = (uuid) => {\n        // retorna a mensagem fechada\n        this.props.onClose(this.state.msgs.filter(msg => {\n            return msg.uuid === uuid;\n        })[0]);\n        // retira a mensagem da lista\n        return this.state.msgs.filter(msg => {\n            return msg.uuid !== uuid;\n        });\n    };\n\n\n    render() {\n\n        return (\n            <div className=\"row\" style={css.fixBotton}>\n                <div className=\"col s12 center-align\">\n                    {this.snackMsgs()}\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Snack extends Component {\n\n    static propTypes = {\n        type: PropTypes.string,\n        text: PropTypes.string.isRequired,\n        closeTime: PropTypes.number,\n        uuid: PropTypes.number,\n        handleClose: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        type: 'info',\n        text: '',\n        closeTime: 5,\n        uuid: null,\n        handleClose: {}\n    };\n\n    constructor(props) {\n        super(props);\n        this.initCounter();\n    }\n\n    state = {\n        counter: 0\n    };\n\n    timer = null;\n    initCounter = () => {\n        this.timer = setInterval(() => {\n            this.setState({counter: this.state.counter + 1});\n        }, 1000);\n    };\n\n    componentWillUnmount() {\n        this.stopTimer();\n    }\n\n    stopTimer() {\n        clearInterval(this.timer);\n    }\n\n    close = () => {\n        this.stopTimer();\n        this.setState({counter: 9999});\n    };\n\n    render() {\n\n        const {counter} = this.state;\n        const {type, text, closeTime, uuid, handleClose} = this.props;\n\n        if (counter >= closeTime) {\n            this.stopTimer();\n            handleClose(uuid);\n            return null;\n        }\n\n        const style = [];\n        style['info'] = {\n            textClass: 'white-text',\n            cardClass: 'grey darken-1'\n        };\n        style['success'] = {\n            textClass: 'white-text',\n            cardClass: 'green darken-2'\n        };\n        style['warning'] = {\n            textClass: 'grey-text text-darken-4',\n            cardClass: 'orange lighten-2'\n        };\n        style['danger'] = {\n            textClass: 'white-text',\n            cardClass: 'deep-orange darken-4'\n        };\n\n        // todo : trocar o ok por button\n        return (\n            <div className={['card-panel center-align', style[type].cardClass].join(' ')}\n                 style={{\n                     padding: 10,\n                     width: '80%',\n                     margin: '0 auto',\n                     marginTop: 5,\n                     maxWidth: 400,\n                     position: 'relative'\n                 }}>\n                    <span className={style[type].textClass}>\n                       {text}\n                    </span>\n                <a onClick={() => this.close()} href=\"javascript:\" style={{position: 'absolute', right: 15}}\n                   className={[style[type].textClass].join(' ')}>OK</a>\n            </div>\n        );\n    }\n}\n;\n\nexport default SnackBarMsgs;\n"]}